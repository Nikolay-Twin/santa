version: "3.5"

services:

  nginx:
    restart: unless-stopped
    shm_size: '4gb'
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_nginx"
    env_file:
      - .env
    build:
      context: .docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./.docker/nginx/dev.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/vhosts:/etc/nginx/vhosts
      - ./:/var/www/html:rw
      - ./.docker/runtime/nginx:/dev/shm/var:rw
    ports:
      - "${NGINX_PORT}:80"
    links:
      - php
    networks:
      - "${CONTAINER_NAME}_network"

  php:
    shm_size: '2gb'
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_php"
    env_file:
      - .env
    build:
      context: .docker/php
      dockerfile: Dockerfile
      args:
        - LOCAL_UID
        - LOCAL_GID
        - APP_USER
        - APP_GROUP
    volumes:
      - ./:/var/www/html:rw
      - ./.docker/php/php.overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./.docker/runtime/php:/dev/shm/var:rw
    links:
      - mysql
    networks:
      - "${CONTAINER_NAME}_network"

  cli:
    shm_size: '1gb'
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_cli"
    env_file:
      - .env
    build:
      context: .docker/php
      dockerfile: Dockerfile
      args:
        - LOCAL_UID
        - LOCAL_GID
        - APP_USER
        - APP_GROUP
    volumes:
      - ./:/var/www/html:rw
      - ./.docker/php/php.overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./.docker/runtime/cli:/dev/shm/var:rw
    links:
      - mysql
    networks:
      - "${CONTAINER_NAME}_network"

  mysql:
    build:
      context: ./.docker/mysql
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_mysql"
    hostname: mysql
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf:ro
      - ./.docker/runtime/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_PASSWORD}
    networks:
      - "${CONTAINER_NAME}_network"

  myadmin:
    build:
      context: ./.docker/myadmin
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_myadmin"
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
    depends_on:
      - mysql
    networks:
      - "${CONTAINER_NAME}_network"

  redis:
    build:
      context: ./.docker/redis
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_redis"
    hostname: ${REDIS_HOST}
    restart: unless-stopped
    volumes:
      - "./.docker/redis/redis.conf:/usr/local/etc/redis/redis.conf"
    command: "redis-server /usr/local/etc/redis/redis.conf"
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - "${CONTAINER_NAME}_network"

  mail:
    build:
      context: ./.docker/mail
    container_name: "${CONTAINER_PREFIX}_${CONTAINER_NAME}_mail"
    restart: always
    environment:
      MH_AUTH_FILE: /mailhog.auth
      MH_MAILDIR_PATH: /data
      MH_STORAGE: maildir
    volumes:
      - ./.docker/mail/mailhog.auth:/mailhog.auth:ro
      - ./.docker/mail/data:/data:rw
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - "${CONTAINER_NAME}_network"

networks:
  santa_network:
    driver: bridge
